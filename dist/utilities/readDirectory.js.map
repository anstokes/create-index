{"version":3,"file":"readDirectory.js","names":["hasNoExtension","fileName","matches","match","hasMultipleExtensions","length","isSafeName","test","stripExtension","pos","lastIndexOf","slice","Math","max","removeDuplicates","files","preferredExtension","_","filter","withoutExtension","mainAlternative","includes","removeIgnoredFiles","ignorePatterns","patterns","map","pattern","startsWith","endsWith","patternWithoutSlashes","RegExp","matchesPattern","Object","values","forEach","directoryPath","options","validateTargetDirectory","extensions","config","ignoreDirectories","children","fs","readdirSync","absolutePath","path","resolve","isDirectory","statSync","outputFile","some","extension","hasIndex","ignore","sort"],"sources":["../../src/utilities/readDirectory.js"],"sourcesContent":["/**\n * @author    Adrian Stokes <adrian@anstech.co.uk>\n * @company   ANSTECH Limited\n * @copyright 2023 ANSTECH Limited\n * @license   None, all rights reserved\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport _ from 'lodash';\n\nimport hasIndex from './hasIndex';\nimport validateTargetDirectory from './validateTargetDirectory';\n\nconst hasNoExtension = (fileName) => {\n  const matches = fileName.match(/\\./g);\n\n  return !matches;\n};\n\nconst hasMultipleExtensions = (fileName) => {\n  const matches = fileName.match(/\\./g);\n\n  return matches && matches.length > 1;\n};\n\nconst isSafeName = (fileName) => /^[_a-z][\\w.-]*$/i.test(fileName);\n\nconst stripExtension = (fileName) => {\n  const pos = fileName.lastIndexOf('.');\n\n  if (pos === -1) {\n    return fileName;\n  }\n\n  return fileName.slice(0, Math.max(0, pos));\n};\n\nconst removeDuplicates = (files, preferredExtension) => _.filter(files, (fileName) => {\n  const withoutExtension = stripExtension(fileName);\n  const mainAlternative = `${withoutExtension}.${preferredExtension}`;\n\n  if (mainAlternative === fileName) {\n    return true;\n  }\n\n  return !_.includes(files, mainAlternative);\n});\n\nconst removeIgnoredFiles = (files, ignorePatterns = []) => {\n  if (ignorePatterns.length === 0) {\n    return files;\n  }\n\n  const patterns = ignorePatterns.map((pattern) => {\n    if (_.startsWith(pattern, '/') && _.endsWith(pattern, '/')) {\n      const patternWithoutSlashes = pattern.slice(1, -1);\n\n      return new RegExp(patternWithoutSlashes);\n    }\n\n    return new RegExp(pattern);\n  });\n\n  return _.filter(files, (fileName) => {\n    let matchesPattern = true;\n\n    Object.values(patterns).forEach((pattern) => {\n      if (fileName.match(pattern) !== null) {\n        matchesPattern = false;\n      }\n    });\n\n    return matchesPattern;\n  });\n};\n\nexport default (directoryPath, options = {}) => {\n  if (!validateTargetDirectory(directoryPath, options)) {\n    return false;\n  }\n\n  const {\n    extensions = ['js'],\n    config = {},\n    ignoreDirectories = false,\n  } = options;\n\n  let children;\n\n  children = fs.readdirSync(directoryPath);\n\n  children = _.filter(children, (fileName) => {\n    const absolutePath = path.resolve(directoryPath, fileName);\n    const isDirectory = fs.statSync(absolutePath).isDirectory();\n\n    if (!isSafeName(fileName)) {\n      return false;\n    }\n\n    if (hasNoExtension(fileName) && !isDirectory) {\n      return false;\n    }\n\n    if (hasMultipleExtensions(fileName)) {\n      return false;\n    }\n\n    if (_.startsWith(fileName, options.outputFile || 'index.js')) {\n      return false;\n    }\n\n    if (!isDirectory && !extensions.some((extension) => _.endsWith(fileName, `.${extension}`))) {\n      return false;\n    }\n\n    if (isDirectory && (!hasIndex(absolutePath, options) || ignoreDirectories)) {\n      return false;\n    }\n\n    return true;\n  });\n\n  children = removeDuplicates(children, extensions[0]);\n  children = removeIgnoredFiles(children, config.ignore);\n\n  return children.sort();\n};\n"],"mappings":"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"}
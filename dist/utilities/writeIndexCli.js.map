{"version":3,"file":"writeIndexCli.js","names":["directoryPaths","options","sortedDirectoryPaths","sortByDepth","log","outputFile","updateIndex","chalk","green","red","recursive","ignoreUnsafe","extensions","noSemicolons","_","map","directory","findIndexFiles","fileName","silent","flatten","uniq","reverse","join","filter","directoryPath","validateTargetDirectory","forEach","existingIndexCode","config","readIndexConfig","siblings","readDirectory","ignoreDirectories","indexCode","createIndexCode","header","indexFilePath","path","resolve","fs","readFileSync","err","writeFileSync","yellow"],"sources":["../../src/utilities/writeIndexCli.js"],"sourcesContent":["/**\n * @author    Adrian Stokes <adrian@anstech.co.uk>\n * @company   ANSTECH Limited\n * @copyright 2023 ANSTECH Limited\n * @license   None, all rights reserved\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport _ from 'lodash';\nimport chalk from 'chalk';\n\nimport createIndexCode from './createIndexCode';\nimport log from './log';\nimport findIndexFiles from './findIndexFiles';\nimport readDirectory from './readDirectory';\nimport readIndexConfig from './readIndexConfig';\nimport sortByDepth from './sortByDepth';\nimport validateTargetDirectory from './validateTargetDirectory';\n\nexport default (directoryPaths, options = {}) => {\n  let sortedDirectoryPaths;\n\n  sortedDirectoryPaths = sortByDepth(directoryPaths);\n\n  log('Target directories', sortedDirectoryPaths);\n  log('Output file', options.outputFile);\n  if (options.updateIndex) {\n    log('Update index:', options.updateIndex ? chalk.green('true') : chalk.red('false'));\n  } else {\n    log('Recursive:', options.recursive ? chalk.green('true') : chalk.red('false'));\n    log('Ignore unsafe:', options.ignoreUnsafe ? chalk.green('true') : chalk.red('false'));\n    log('Extensions:', chalk.green(options.extensions));\n    log('Semicolons:', options.noSemicolons ? chalk.red('false') : chalk.green('true'));\n  }\n\n  if (options.updateIndex || options.recursive) {\n    sortedDirectoryPaths = _.map(sortedDirectoryPaths, (directory) => findIndexFiles(directory, {\n      fileName: options.updateIndex ? options.outputFile || 'index.js' : '*',\n      silent: options.updateIndex || options.ignoreUnsafe,\n    }));\n    sortedDirectoryPaths = _.flatten(sortedDirectoryPaths);\n    sortedDirectoryPaths = _.uniq(sortedDirectoryPaths);\n    sortedDirectoryPaths = sortByDepth(sortedDirectoryPaths);\n\n    log('Updating index files in:', sortedDirectoryPaths.reverse().join(', '));\n  }\n\n  sortedDirectoryPaths = sortedDirectoryPaths.filter(\n    (directoryPath) => validateTargetDirectory(directoryPath, {\n      outputFile: options.outputFile,\n      silent: options.ignoreUnsafe,\n    }),\n  );\n\n  _.forEach(sortedDirectoryPaths, (directoryPath) => {\n    let existingIndexCode;\n\n    const config = readIndexConfig(directoryPath, options);\n\n    const siblings = readDirectory(directoryPath, {\n      config,\n      extensions: options.extensions,\n      ignoreDirectories: options.ignoreDirectories,\n      silent: options.ignoreUnsafe,\n    });\n\n    const indexCode = createIndexCode(directoryPath, siblings, {\n      header: options.header,\n      config,\n      noSemicolons: options.noSemicolons,\n    });\n\n    const indexFilePath = path.resolve(directoryPath, options.outputFile || 'index.js');\n\n    try {\n      existingIndexCode = fs.readFileSync(indexFilePath, 'utf8');\n    } catch (err) {\n      // Unable to read file\n    }\n\n    fs.writeFileSync(indexFilePath, indexCode);\n\n    if (existingIndexCode && existingIndexCode === indexCode) {\n      log(indexFilePath, chalk.yellow('[index has not changed]'));\n    } else if (existingIndexCode && existingIndexCode !== indexCode) {\n      log(indexFilePath, chalk.green('[updated index]'));\n    } else {\n      log(indexFilePath, chalk.green('[created index]'));\n    }\n  });\n\n  log('Done');\n};\n"],"mappings":"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"}
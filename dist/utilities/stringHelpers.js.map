{"version":3,"file":"stringHelpers.js","names":["stringHelpers","capitaliseFirstLetter","string","charAt","toUpperCase","slice","hyphenToCamelCase","hyphenated","replace","hyphenToPascalCase","camelCase","length","hyphenToSnakeCase","letter","toLowerCase"],"sources":["../../src/utilities/stringHelpers.js"],"sourcesContent":["/**\n * @author    Adrian Stokes <adrian@anstech.co.uk>\n * @company   ANSTECH Limited\n * @copyright 2023 ANSTECH Limited\n * @license   None, all rights reserved\n */\n\nconst stringHelpers = {\n  capitaliseFirstLetter: (string) => string.charAt(0).toUpperCase() + string.slice(1),\n  hyphenToCamelCase: (hyphenated) => hyphenated.replace(/-([a-z])/g, (string) => string[1].toUpperCase()),\n  hyphenToPascalCase: (hyphenated) => {\n    const camelCase = stringHelpers.hyphenToCamelCase(hyphenated);\n\n    return camelCase[0].toUpperCase() + camelCase.slice(1, camelCase.length);\n  },\n  hyphenToSnakeCase: (hyphenated) => hyphenated.replace(/-([a-z])/g, (letter) => `_${letter[1].toLowerCase()}`),\n};\n\nexport default stringHelpers;\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,aAAa,GAAG;EACpBC,qBAAqB,EAAGC,MAAM,IAAKA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;EACnFC,iBAAiB,EAAGC,UAAU,IAAKA,UAAU,CAACC,OAAO,CAAC,WAAW,EAAGN,MAAM,IAAKA,MAAM,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE,CAAC;EACvGK,kBAAkB,EAAGF,UAAU,IAAK;IAClC,MAAMG,SAAS,GAAGV,aAAa,CAACM,iBAAiB,CAACC,UAAU,CAAC;IAE7D,OAAOG,SAAS,CAAC,CAAC,CAAC,CAACN,WAAW,EAAE,GAAGM,SAAS,CAACL,KAAK,CAAC,CAAC,EAAEK,SAAS,CAACC,MAAM,CAAC;EAC1E,CAAC;EACDC,iBAAiB,EAAGL,UAAU,IAAKA,UAAU,CAACC,OAAO,CAAC,WAAW,EAAGK,MAAM,IAAM,IAAGA,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAG,EAAC;AAC9G,CAAC;AAAC,eAEad,aAAa;AAAA"}